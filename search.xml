<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>原生JS实现飞机大战小游戏</title>
    <url>/2020/03/17/%E5%8E%9F%E7%94%9FJS%E5%AE%9E%E7%8E%B0%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p>@<a href="原生js实现飞机大战小游戏">TOC</a><br><strong>废话不多说我们直接开始吧</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200317144333483.jpg" alt=""><br>首先是最基础的html结构，三个小飞机图来表示己方剩余的血量，剩下的css样式自己设置即可。<br><img src="https://img-blog.csdnimg.cn/20200317133843581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""><br>设置成这样就可以了<br><img src="https://img-blog.csdnimg.cn/20200317143407792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""><br>//先创建一个游戏引擎</p>
<pre><code class="javascript">var Engine = {
    //刚开始的游戏状态
    gameStatus: false,
    //所有敌机
    enemy: {},
    //子弹
    bullet: {},
    //得分
    scroe: 0,
    //游戏开始按钮
    goplay: document.getElementById(&#39;start&#39;),
    //背景图片
    game: document.querySelector(&#39;.game&#39;),
    //页面得分
    textScroe: document.querySelector(&#39;.score&#39;),
    //游戏开始页面
    contentdiv: document.getElementById(&#39;contentdiv&#39;),
    //游戏结束分数界面
    gameover : document.querySelector(&#39;.gameover&#39;),
    //初始化
    init: function () {
        this.gameStart();
    },
        //游戏开始
    gameStart: function () {
        var _this = this; //保存this
        //点击按钮的时候判断游戏状态
        this.goplay.onclick = function () {
            _this.game.style.display = &quot;block&quot;;
            _this.contentdiv.style.display = &quot;none&quot;;
            if (!_this.gameStatus) {
                _this.gameStatus = true;
                //背景移动
                _this.bgMove();
                _this.handleMove();
                _this.createPlane();
            }
        }
    },
    //背景移动
    bgMove: function () {
        //设置背景每次移动距离
        var y = 0;
        //保存this
        var _this = this;
        //使用定时器来移动背景
        this.bgTimer = setInterval(function () {
            y += 2;
            _this.game.style[&#39;background-position-y&#39;] = y + &#39;px&#39;;
        }, 50)
    },
    createPlane: function () {
        //创建主角机
        Hero.init();

        //创建敌机
        this.createTimer = setInterval(function () {
        //获取随机数
         var num = parseInt(Math.random() * 15) + 1;
         //创建小飞机
         switch (num) {
             case 1:
             case 3:
             case 5:
             case 7:
             case 9:
             case 10:
                 new SmallEnemy().init();
                 break;
         //创建中性飞机
             case 2:
             case 4:
             case 6:
                 new MiddleEnemy().init();
         //创建大飞机（三个敌机对象在后续补充）
             case 8:
             case 12:
                 new LargeEnemy().init();
            }
        }, 500)
    },
    //所有敌机和子弹开始动起来
    handleMove: function () {
        //this指向改变提前保存
        var _this = this;
        this.moveTimer = setInterval(function () {
            //所有子弹
            for (var i in _this.bullet) {
                _this.bullet[i].move()
            }
            //所有敌机
            for (var i in _this.enemy) {
                _this.enemy[i].move()
            }

        }, 30)
    },
    //碰撞检测
       isCompact: function (obj1, obj2) {
           // –碰撞范围限定
           // 子弹左边坐标&gt;敌方飞机左边坐标
           // 子弹左边坐标&lt;敌方飞机左边坐标+敌方飞机的宽度
           // 子弹顶部坐标&gt;敌方飞机的顶部坐标
           // 子弹顶部坐标&lt;敌方飞机顶部坐标+敌方飞机的高度
        var l1 = obj1.offsetLeft &gt;= obj2.offsetLeft;
          var l2 = obj1.offsetLeft &lt;= obj2.offsetLeft + obj2.offsetWidth;
        var t1 = obj1.offsetTop &gt;= obj2.offsetTop;
        var t2 = obj1.offsetTop &lt;= obj2.offsetTop + obj2.offsetHeight;
                if (l1 &amp;&amp; l2 &amp;&amp; t1 &amp;&amp; t2) {
                //满足则击中返回true
                    return true;
                } else {
                    return false;
                }
            },
    //更新得分
    updateScroe: function (scroe) {
        this.scroe += scroe;
        this.textScroe.innerHTML = &quot;分数&quot; + this.scroe;
    },
    //游戏结束
    gameOver: function () {
      this.gameStatus = false,
      this.gameover.style.display=&#39;block&#39;;
      this.gameover.firstElementChild.innerHTML = 
      &#39;游戏结束，您的得分为&#39;+ this.scroe;
    //停止敌机
      clearInterval(this.createTimer);
      //子弹停止
      clearInterval(this.moveTimer);
    }
};
Engine.init();</code></pre>
<p>子弹嘛，设置多点才有游戏体验<br>两下就死了有啥好玩的<br><img src="https://img-blog.csdnimg.cn/20200317144246307.jpg" alt=""><br>因为子弹需要大量的创建,所以创建一个子弹的构造函数<br>因为子弹是从主角机中间发射过来的所以需要获取主角机的x,y这里用l和t表示</p>
<pre><code class="javascript">function Bullet(l, t) {
            //存储传进来的 l t
            this.l = l;
            this.t = t;
            //初始化子弹
            this.self = null;
            //子弹的初始Left
            this.left = 0;
            //子弹的初始Top
            this.top = 0;
            //子弹的速度
            this.speed = 10;
            //子弹的编号 因为在引擎里面有一个专门存放子弹的对象，所以我们要给每一个子弹生成编号
            this.id = &#39;&#39;;
        }
        Bullet.prototype = {
            //手动添加构造函数
            constructor: Bullet,
            init: function () {
                //创建一个元素
                var img = document.createElement(&#39;img&#39;);
                //将图片的路径赋值给他
                img.src = &#39;image/bullet1.png&#39;;
                //插入game中
                Engine.game.appendChild(img);
                //赋值给子弹初始图片
                this.self = img;
                //当图片加载完成后获取图片的高度和宽度
                var _this = this;
                //在函数里面this的指向会改变，所以我们提前保存下来
                img.onload = function () {
                   //因为上面的元素属性有this.left所以我们应该和图片一样赋值给它
                   //子弹的left中心点等于 英雄机的宽度-子弹的宽度除以2
                    _this.left = _this.l - _this.self.offsetWidth / 2;
                    _this.top = _this.t - _this.self.offsetHeight;
                    img.style.left = _this.left + &#39;px&#39;;
                    img.style.top = _this.top + &#39;px&#39;;
                }
                //生成子弹编号并放入引擎的bullet中
                //编号选用当前时间戳以保证不会重复
                this.id = new Date().getTime();
                Engine.bullet[this.id] = this;
            },
            //子弹移动，定时器
            move: function () {
                this.top -= this.speed;
                this.self.style.top = this.top + &#39;px&#39;;
                //判断是否出界
                if (this.top &lt;= -this.self.offsetHeight) {
                    this.destroy();
                }
                //是否与敌机碰撞
                for (i in Engine.enemy) {
                    //调用引擎的判断碰撞函数
                    if (Engine.isCompact(this.self, Engine.enemy[i].self)) 
                        //true则删除
                        this.destroy();
                        //敌机血量减少
                        Engine.enemy[i].blood--;
                        //如果血量为0则删除
                        if (Engine.enemy[i].blood &lt;= 0) {
                            Engine.enemy[i].destroy();
                        }
                    }
                }
            },
            destroy: function () {
                //销毁
                //从页面消失
                this.self.remove();
                //从内存消失
                delete Engine.bullet[this.id];
            },
        }</code></pre>
<p>接下来创建主角机。因为主角机只有一架所以直接var一个就可以了<br>当然也可以创建一个构造函数不过不是很有必要<br><img src="https://img-blog.csdnimg.cn/20200317144547181.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""></p>
<pre><code class="javascript">    var Hero = {
        //初始图片
        self: null,
        //初始left
        left: 0,
        //初始top
        top: 0,
        //生命值
        life: 3,
        //加载进来的图和爆炸的图
        imgs: [&#39;image/my.gif&#39;, &#39;image/bz.gif&#39;],
        //获得到自己的血量
        allHero: document.querySelectorAll(&#39;.life&gt;img&#39;),
        //初始化
    init: function () {
        //创建一个图片元素
        var img = document.createElement(&#39;img&#39;);
        //将图片路径赋值给它
        img.src = this.imgs[0];
        //插入到game中
        Engine.game.appendChild(img);
        //赋值给英雄机
        this.self = img;
           //当图片加载完成以后获取图片的高度和宽度
           var _this = this
           //在函数里this的指向会改变，所以我们提前保存下来
           img.onload = function () {
           //英雄机的left中心点等于（game的宽度-英雄机的宽度）除以2
           _this.left = (Engine.game.offsetWidth - img.offsetWidth) / 2;
           _this.top = Engine.game.offsetHeight - img.offsetHeight;
           img.style.left = _this.left + &#39;px&#39;;
           img.style.top = _this.top + &#39;px&#39;;
           //赋值后分别调用移动事件和子弹发射事件
            _this.move();
            _this.shoot();
             };
         },
          //英雄机移动事件
          move: function () {
          //类似放大镜事件
          var _this = this;
          //鼠标移动事件会改变this指向，提前保存this
          document.onmousemove = function (e) {
              //兼容谷歌 ie8
                 var e = e || event;
                var l = e.clientX - Engine.game.offsetLeft - 
                _this.self.offsetWidth / 2;
                var t = e.clientY - Engine.game.offsetTop - 
                _this.self.offsetHeight / 2;
                // 最大边界和最小边界
                  var lmax = Engine.game.offsetWidth - 
                  _this.self.offsetWidth;
                  var bmax = Engine.game.offsetHeight - 
                  _this.self.offsetHeight;
                 l = l &lt; 0 ? 0 : (l &gt; lmax ? lmax : l);
                 t = t &lt; 0 ? 0 : (t &gt; bmax ? bmax : t);
                 //赋值
                 _this.self.style.left = l + &quot;px&quot;;
                 _this.self.style.top = t + &quot;px&quot;;

                 //更新left  top
                 _this.left = l;
                 _this.top = t;
                }
            },

            //发射子弹
            shoot: function () {
                //每隔10毫秒发一次子弹
                var _this = this;
                //在定时器中this指向会改变，提前保存
                this.shootTimer = setInterval(function () {
                    var l = _this.left + _this.self.offsetWidth / 2
                    //创建子弹
                    new Bullet(l, _this.top).init();
                }, 30)
            },
             //主角机阵亡
            bang: function () {
                var img = document.createElement(&#39;img&#39;);
                //更换主角机爆炸的图片
                img.src = this.imgs[1];
                //使爆炸的主角机保留在当前位置
                img.style.left = this.left + &#39;px&#39;;
                img.style.top = this.top + &#39;px&#39;;
                //加入地图
                Engine.game.appendChild(img);
                //晚500毫秒后删除
                //调用一次行的定时器
                setTimeout = (function () {
                    img.remove();
                }, 500)
            },
            //主角机撞击事件
            die: function () {
                //主角机血量下降
                this.life--;
                //页面上的血量下降
                this.allHero = document.querySelectorAll(&#39;.life img&#39;);
                this.allHero[0].remove();
                console.log(this.allHeart, this.allHero[0]);
                //英雄机血量为0,游戏结束
                if (this.life &lt;= 0) {
                    this.destroy();
                }
            },
            destroy: function () {
                //删除英雄机
                this.self.remove();
                //执行英雄机爆炸事件函数
                this.bang();
                //停止发射子弹
                clearInterval(this.shootTimer);
                //执行游戏结束函数s
                Engine.gameOver();
            },
        }
        //在游戏没开始的时候不能出现英雄机和子弹所以Hero.init()要放在引擎里面</code></pre>
<p>创建敌机</p>
<pre><code class="javascript">        function Enemy(blood, speed, imgs, scroe) {
            //分数
            this.scroe = scroe;
            //敌机left
            this.left = 0;
            //敌机top
            this.top = 0;
            //敌机血量
            this.blood = blood;
            //敌机速度
            this.speed = speed;
            //敌机图片集合
            this.imgs = imgs;
            //敌机初始化
            this.self = null;
            //敌机编号
            this.id = &#39;&#39;;
        }
        Enemy.prototype = {
            //手动添加构造函数
            constructor: Enemy,
            init: function () {
                //创建一个元素
                var img = document.createElement(&#39;img&#39;);
                //将图片路径赋值给它
                img.src = this.imgs[0];
                //插入到game中
                Engine.game.appendChild(img);
                //赋值给敌机
                this.self = img;
                //当图片加载完成以后获取图片的高度和宽度
                var _this = this;
                //在函数里面this的指向会改变，所以我们提前保存下来
                img.onload = function () {
                    //随机出现的范围为地图减去敌机本身宽度
                    _this.left = parseInt(Math.random() * 
                    (Engine.game.offsetWidth - img.offsetWidth));
                    _this.top = -img.offsetHeight;
                    img.style.left = _this.left + &#39;px&#39;;
                    img.style.top = _this.top + &#39;px&#39;;
                };
                //生成敌机编号放入引擎的enemy中
                this.id = Math.random();
                Engine.enemy[this.id] = this;
            },
            //敌机移动，定时器都交给引擎去做
            move: function () {
                this.top += this.speed;
                this.self.style.top = this.top + &#39;px&#39;;
                //越界判断
                if (this.top &gt; Engine.game.offsetHeight + 
                this.self.offsetHeight) {
                    this.destroy();
                }
                //判断与英雄机相撞
                if (Engine.isCompact(this.self, Hero.self)) {
                    //执行血量下降事件
                    this.destroy();
                    //英雄机执行血量下降事件
                    Hero.die();
                }
            },
            //敌机爆炸事件
            bang: function () {
                //创建img
                var img = document.createElement(&#39;img&#39;);
                //赋值爆炸图片
                img.src = this.imgs[1];
                img.style.zIndex = 0;
                //固定位置
                img.style.left = this.left + &#39;px&#39;;
                img.style.top = this.top + &#39;px&#39;;
                //加入地图
                Engine.game.appendChild(img)
                //爆炸持续300毫秒
                setTimeout(function () {
                    img.remove();
                }, 300);
            },
            destroy: function () {
                //销毁
                //从页面消失
                this.self.remove();
                this.bang();
                //统计得分
                Engine.updateScroe(this.scroe);
                //从内存消失
                delete Engine.enemy[this.id];
            },
        }
function SmallEnemy() {
       var s = parseInt(Math.random() * 3 + 3);
       Enemy.call(this, 1, s, [&#39;image/enemy1.png&#39;, &#39;image/xx.gif&#39;], 10)
}
SmallEnemy.prototype = {
       //改变原型指向Enemy
       constructor: SmallEnemy,
       __proto__: Enemy.prototype
};
function MiddleEnemy() {
       var s = parseInt(Math.random() * 3 + 2);
       Enemy.call(this, 5, s, [&#39;image/enemy2.png&#39;, &#39;image/zz.gif&#39;], 20)
        }
        MiddleEnemy.prototype = {
            //改变原型指向Enemy
            constructor: MiddleEnemy,
            __proto__: Enemy.prototype
        }

function LargeEnemy() {
      var s = parseInt(Math.random() * 2 + 1);
      Enemy.call(this, 10, s, [&#39;image/enemy3.png&#39;, &#39;image/dd.gif&#39;], 50)
      }
        LargeEnemy.prototype = {
            //改变原型指向Enemy
            constructor: LargeEnemy,
            __proto__: Enemy.prototype
        }</code></pre>
<p>在这之后整个游戏就算勉强能玩了。<br><img src="https://img-blog.csdnimg.cn/20200317144728765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""><br>启动游戏<br><img src="https://img-blog.csdnimg.cn/20200317143432365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200317143454488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""><br>子弹设置的太猛了看起来像某种东西emmmmm…..<br><img src="https://img-blog.csdnimg.cn/20200317143829191.gif" alt=""><br><img src="https://img-blog.csdnimg.cn/2020031714353586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt=""><br>游戏结束<img src="https://img-blog.csdnimg.cn/20200317143933444.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX21pbmdy,size_16,color_FFFFFF,t_70" alt="">写道最后才发现忘记设置暂停游戏了。索性就放着了以后在写。<br>萌新发帖。不足之处请大佬们手下留情。有问题直接指出。我一定虚心接受<br><img src="https://img-blog.csdnimg.cn/20200317144800597.gif" alt=""></p>
]]></content>
  </entry>
</search>
